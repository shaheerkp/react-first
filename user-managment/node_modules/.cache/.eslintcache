[{"/home/shaheer/react-first/user-managment/src/index.js":"1","/home/shaheer/react-first/user-managment/src/App.jsx":"2","/home/shaheer/react-first/user-managment/src/SignUp.jsx":"3","/home/shaheer/react-first/user-managment/src/Signin.jsx":"4","/home/shaheer/react-first/user-managment/src/Home.jsx":"5","/home/shaheer/react-first/user-managment/src/Todo.jsx":"6","/home/shaheer/react-first/user-managment/src/hadler/handler.js":"7"},{"size":200,"mtime":1636997761931,"results":"8","hashOfConfig":"9"},{"size":712,"mtime":1638158351355,"results":"10","hashOfConfig":"9"},{"size":3540,"mtime":1638015724379,"results":"11","hashOfConfig":"9"},{"size":2887,"mtime":1638203645543,"results":"12","hashOfConfig":"9"},{"size":2235,"mtime":1638203971998,"results":"13","hashOfConfig":"9"},{"size":3885,"mtime":1638202772365,"results":"14","hashOfConfig":"9"},{"size":781,"mtime":1638184472324,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"381en7",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/home/shaheer/react-first/user-managment/src/index.js",[],["32","33"],"/home/shaheer/react-first/user-managment/src/App.jsx",[],"/home/shaheer/react-first/user-managment/src/SignUp.jsx",[],"/home/shaheer/react-first/user-managment/src/Signin.jsx",["34"],"/home/shaheer/react-first/user-managment/src/Home.jsx",["35","36"],"/home/shaheer/react-first/user-managment/src/Todo.jsx",["37","38","39"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { getTasks } from \"./hadler/handler\";\nimport \"./Todo.css\";\n\nfunction Todo(props) {\n  const [todoss, setTodoss] = useState([]);\n  const [todo, setTodo] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [select,setSelect]=useState(\"\")\n  let data;\n  var d = new Date();\n  var n = d.getDay();\n  let weeks = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n\n  useEffect(() => {\n    let id = { id: props.data };\n    setUserId(props.data);\n    axios.post(\"http://localhost:4000/gettasks\", id).then((res) => {\n      data = res.data;\n      console.log(...data);\n      setTodoss([...data]);\n    });\n  }, []);\n\n  console.log(\"todoss\", todoss);\n\n  const addTodo = () => {\n    const add = {\n      task: todo,\n      userid: userId,\n    };\n    axios.post(\"http://localhost:4000/addtask\", add).then((res) => {\n      if (res.data.status) {\n        setTodoss([...todoss, add]);\n        setTodo(\"\");\n      } else {\n        alert(res.data.mes);\n      }\n    });\n  };\n\n  const  getFilteredData=async(value)=>{\n    alert(value)\n    getTasks(userId,value,(data)=>{\n      console.log(data,\"dataaaa\");\n      setTodoss([...data])\n\n    });\n\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"mt-5 mainHeading\">\n        <h1>ToDo List</h1>\n      </div>\n      <div className=\"subHeading\">\n        <br />\n        <h2>Whoop, it's {weeks[n]} üåù ‚òï </h2>\n      </div>\n      <div style={{ display: \"flex\" }}>\n        <div className=\"input\">\n          <input\n            value={todo}\n            type=\"text\"\n            onChange={(e) => setTodo(e.target.value)}\n            placeholder=\"üñäÔ∏è Add item...\"\n          />\n          <i onClick={addTodo} className=\"fas fa-plus\"></i>\n        </div>\n        <select\n          onChange={(e) => {\n            getFilteredData(e.target.value)\n            \n          }}\n          class=\"form-select ms-5 mt-2\"\n          style={{ width: \"15rem\" }}\n          aria-label=\"Default select example\"\n        >\n           <option  value=\"all\">Select</option>\n          <option  value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"active\">Active</option>\n        </select>\n      </div> \n \n      <div className=\"todos\">\n        {todoss.map((value, index) => {\n          return (\n            <div className=\"todo\">\n              <div className=\"left\">\n                <input\n                  checked={value.iscompleted}\n                  onChange={(e) => {\n                    axios.post(\"http://localhost:4000/changestatus\", {\n                      date: value.date,\n                      userid: userId,\n                      iscompleted: value.iscompleted,\n                    });\n                    todoss[index].iscompleted = !value.iscompleted;\n                    setTodoss([...todoss]);\n                  }}\n                  type=\"checkbox\"\n                  name=\"\"\n                  id=\"\"\n                />\n                <p\n                  style={\n                    value.iscompleted\n                      ? { textDecoration: \"line-through\" }\n                      : null\n                  }\n                >\n                  {value.task}\n                </p>\n              </div>\n              <div className=\"right\">\n                <i\n                  onClick={() => {\n                    todoss.splice(index, 1);\n                    setTodoss([...todoss]);\n                    axios.post(\"http://localhost:4000/delete\", {\n                      date: value.date,\n                      userid: userId,\n                    });\n                  }}\n                  className=\"fas fa-times\"\n                ></i>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Todo;\n","/home/shaheer/react-first/user-managment/src/hadler/handler.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":28,"column":6,"nodeType":"46","endLine":28,"endColumn":8,"suggestions":"47"},{"ruleId":"44","severity":1,"message":"45","line":34,"column":6,"nodeType":"46","endLine":34,"endColumn":8,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":42,"column":9,"nodeType":"51","endLine":42,"endColumn":47},{"ruleId":"52","severity":1,"message":"53","line":10,"column":10,"nodeType":"54","messageId":"55","endLine":10,"endColumn":16},{"ruleId":"52","severity":1,"message":"56","line":10,"column":17,"nodeType":"54","messageId":"55","endLine":10,"endColumn":26},{"ruleId":"44","severity":1,"message":"57","line":28,"column":14,"nodeType":"58","endLine":28,"endColumn":22},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["61"],["62"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'select' is assigned a value but never used.","Identifier","unusedVar","'setSelect' is assigned a value but never used.","Assignments to the 'data' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},{"desc":"63","fix":"65"},"Update the dependencies array to be: [navigate]",{"range":"66","text":"67"},{"range":"68","text":"67"},[637,639],"[navigate]",[869,871]]